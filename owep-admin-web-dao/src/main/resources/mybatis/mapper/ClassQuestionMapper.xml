<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kclm.owep.mapper.ClassQuestionMapper">
  <resultMap id="BaseResultMap" type="classQuestion">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="question_title" jdbcType="VARCHAR" property="questionTitle" />
    <result column="question_desc" jdbcType="VARCHAR" property="questionDesc" />
    <result column="question_status" jdbcType="INTEGER" property="questionStatus" />
    <result column="correlated_course" jdbcType="VARCHAR" property="correlatedCourse" />
    <result column="fk_course_id" jdbcType="INTEGER" property="course" />
    <result column="course_number" jdbcType="INTEGER" property="courseNumber" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="version" jdbcType="INTEGER" property="version" />
    <result column="last_access_time" jdbcType="TIMESTAMP" property="lastAccessTime" />
    <association property="student" javaType="student" select="com.kclm.owep.mapper.StudentMapper.selectByPrimaryKey"/>
    <association property="video" javaType="video" select="com.kclm.owep.mapper.VideoMapper.selectByPrimaryKey"/>
    <association property="course" javaType="course" select="com.kclm.owep.mapper.CourseMapper."/>
  </resultMap>
  <!--<sql id="Example_Where_Clause">
    &lt;!&ndash;
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    &ndash;&gt;
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>-->
 <!-- <sql id="Update_By_Example_Where_Clause">
    &lt;!&ndash;
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    &ndash;&gt;
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>-->
  <sql id="Base_Column_List">
    id, question_title, question_desc, question_status, correlated_course, fk_student_id,
    fk_video_id, fk_course_id, course_number, create_time, version, last_access_time
  </sql>
  <!--通过id来查询一条记录-->
  <select id="selectById" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_class_question
    where id = #{id,jdbcType=INTEGER}
  </select>
  <!--查询所有的记录-->
  <select id="selectAll" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_class_question
  </select>
  <!--通过id来删除一条记录-->
  <delete id="deleteById" parameterType="java.lang.Integer">
    delete from t_class_question
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <!--刪除多条记录-->
  <delete id="deleteSelect">
    delete from t_class_question
    where id in
    <foreach collection="idList" item="list" open="(" separator="," close=")">
      #{list}
    </foreach>
  </delete>
 <!-- &lt;!&ndash;保存一条记录&ndash;&gt;
  <insert id="save" parameterType="com.kclm.owep.entity.ClassQuestion">
    &lt;!&ndash;
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    &ndash;&gt;
    insert into t_class_question (id, question_title, question_desc, 
      question_status, correlated_course, fk_student_id, 
      fk_video_id, fk_course_id, course_number, 
      create_time, version, last_access_time
      )
    values (#{id,jdbcType=INTEGER}, #{questionTitle,jdbcType=VARCHAR}, #{questionDesc,jdbcType=VARCHAR}, 
      #{questionStatus,jdbcType=INTEGER}, #{correlatedCourse,jdbcType=VARCHAR}, #{student.id,jdbcType=INTEGER},
      #{video.id,jdbcType=INTEGER}, #{course.id,jdbcType=INTEGER}, #{courseNumber,jdbcType=INTEGER},
      #{createTime,jdbcType=TIMESTAMP}, #{version,jdbcType=INTEGER}, #{lastAccessTime,jdbcType=TIMESTAMP}
      )
  </insert>-->
  <!--动态保存一条记录-->
  <insert id="save" parameterType="com.kclm.owep.entity.ClassQuestion">
    insert into t_class_question
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="questionTitle != null">
        question_title,
      </if>
      <if test="questionDesc != null">
        question_desc,
      </if>
      <if test="questionStatus != null">
        question_status,
      </if>
      <if test="correlatedCourse != null">
        correlated_course,
      </if>
      <if test="student != null">
        fk_student_id,
      </if>
      <if test="student != null">
        fk_video_id,
      </if>
      <if test="student != null">
        fk_course_id,
      </if>
      <if test="courseNumber != null">
        course_number,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="version != null">
        version,
      </if>
      <if test="lastAccessTime != null">
        last_access_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="questionTitle != null">
        #{questionTitle,jdbcType=VARCHAR},
      </if>
      <if test="questionDesc != null">
        #{questionDesc,jdbcType=VARCHAR},
      </if>
      <if test="questionStatus != null">
        #{questionStatus,jdbcType=INTEGER},
      </if>
      <if test="correlatedCourse != null">
        #{correlatedCourse,jdbcType=VARCHAR},
      </if>
      <if test="student != null">
        #{student.id,jdbcType=INTEGER},
      </if>
      <if test="video != null">
        #{video.id,jdbcType=INTEGER},
      </if>
      <if test="course != null">
        #{course.id,jdbcType=INTEGER},
      </if>
      <if test="courseNumber != null">
        #{courseNumber,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="version != null">
        #{version,jdbcType=INTEGER},
      </if>
      <if test="lastAccessTime != null">
        #{lastAccessTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>

  <!--动态更新一条记录-->
  <update id="update" parameterType="com.kclm.owep.entity.ClassQuestion">
    update t_class_question
    <set>
      <if test="questionTitle != null">
        question_title = #{questionTitle,jdbcType=VARCHAR},
      </if>
      <if test="questionDesc != null">
        question_desc = #{questionDesc,jdbcType=VARCHAR},
      </if>
      <if test="questionStatus != null">
        question_status = #{questionStatus,jdbcType=INTEGER},
      </if>
      <if test="correlatedCourse != null">
        correlated_course = #{correlatedCourse,jdbcType=VARCHAR},
      </if>
      <if test="student != null">
        fk_student_id = #{student.id,jdbcType=INTEGER},
      </if>
      <if test="video != null">
        fk_video_id = #{video.id,jdbcType=INTEGER},
      </if>
      <if test="course != null">
        fk_course_id = #{course.id,jdbcType=INTEGER},
      </if>
      <if test="courseNumber != null">
        course_number = #{courseNumber,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=INTEGER},
      </if>
      <if test="lastAccessTime != null">
        last_access_time = #{lastAccessTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <!--&lt;!&ndash;更新一条记录&ndash;&gt;
  <update id="update" parameterType="com.kclm.owep.entity.ClassQuestion">
    &lt;!&ndash;
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    &ndash;&gt;
    update t_class_question
    set question_title = #{questionTitle,jdbcType=VARCHAR},
      question_desc = #{questionDesc,jdbcType=VARCHAR},
      question_status = #{questionStatus,jdbcType=INTEGER},
      correlated_course = #{correlatedCourse,jdbcType=VARCHAR},
      fk_student_id = #{student.id,jdbcType=INTEGER},
      fk_video_id = #{video.id,jdbcType=INTEGER},
      fk_course_id = #{course.id,jdbcType=INTEGER},
      course_number = #{courseNumber,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      version = #{version,jdbcType=INTEGER},
      last_access_time = #{lastAccessTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>-->
</mapper>